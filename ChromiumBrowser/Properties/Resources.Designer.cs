//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KitsuneBrowser.Properties {
    using System;
    
    
    /// <summary>
    ///   Classe di risorse fortemente tipizzata per la ricerca di stringhe localizzate e così via.
    /// </summary>
    // Questa classe è stata generata automaticamente dalla classe StronglyTypedResourceBuilder.
    // tramite uno strumento quale ResGen o Visual Studio.
    // Per aggiungere o rimuovere un membro, modificare il file con estensione ResX ed eseguire nuovamente ResGen
    // con l'opzione /str oppure ricompilare il progetto VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Restituisce l'istanza di ResourceManager nella cache utilizzata da questa classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KitsuneBrowser.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Esegue l'override della proprietà CurrentUICulture del thread corrente per tutte le
        ///   ricerche di risorse eseguite utilizzando questa classe di risorse fortemente tipizzata.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Add {
            get {
                object obj = ResourceManager.GetObject("Add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap AddHover {
            get {
                object obj = ResourceManager.GetObject("AddHover", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap back {
            get {
                object obj = ResourceManager.GetObject("back", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap background {
            get {
                object obj = ResourceManager.GetObject("background", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Background1 {
            get {
                object obj = ResourceManager.GetObject("Background1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap BackgroundTab {
            get {
                object obj = ResourceManager.GetObject("BackgroundTab", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Center {
            get {
                object obj = ResourceManager.GetObject("Center", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Close {
            get {
                object obj = ResourceManager.GetObject("Close", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Byte[].
        /// </summary>
        internal static byte[] Close1 {
            get {
                object obj = ResourceManager.GetObject("Close1", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Byte[].
        /// </summary>
        internal static byte[] CloseHighlight {
            get {
                object obj = ResourceManager.GetObject("CloseHighlight", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CloseHover {
            get {
                object obj = ResourceManager.GetObject("CloseHover", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap download {
            get {
                object obj = ResourceManager.GetObject("download", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a &lt;div class=&quot;download-item&quot; id=&quot;ITEM-$itemId$&quot;&gt;
        ///    &lt;div class=&quot;item-name&quot;&gt;
        ///     $itemName$
        ///    &lt;/div&gt;
        ///    &lt;div class=&quot;link-name&quot;&gt;
        ///     $linkName$
        ///    &lt;/div&gt;
        ///    &lt;div class=&quot;download-progression&quot; id=&quot;progression-ITEM-$itemId$&quot;&gt;
        ///     &lt;div class=&quot;progress-bar-empty&quot;&gt;
        ///         &lt;div id=&quot;progress-bar-ITEM-$itemId$&quot; class=&quot;progress-bar-filling&quot; style=&quot;width: $barSize$%;&quot;&gt;
        ///
        ///         &lt;/div&gt;
        ///         &lt;div class=&quot;link-name&quot; style=&apos;margin-top:10px;&apos; id=&apos;STATUS-ITEM-$itemId$&apos;&gt;$progressionText$&lt;/div&gt;
        ///        [stringa troncata]&quot;;.
        /// </summary>
        internal static string download_item {
            get {
                return ResourceManager.GetString("download_item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap favorites {
            get {
                object obj = ResourceManager.GetObject("favorites", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap favorites_exist {
            get {
                object obj = ResourceManager.GetObject("favorites_exist", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap forward {
            get {
                object obj = ResourceManager.GetObject("forward", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Byte[].
        /// </summary>
        internal static byte[] github_mark_white {
            get {
                object obj = ResourceManager.GetObject("github_mark_white", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a &lt;html&gt;
        ///    &lt;head&gt;
        ///
        ///        &lt;title&gt;Homepage | Kitsune Browser&lt;/title&gt;
        ///
        ///    &lt;style&gt;
        ///        body{
        ///            background-image: url(&apos;$backgroundImage$&apos;);
        ///            background-repeat: no-repeat;
        ///            background-attachment: fixed;  
        ///            background-size: cover;
        ///            padding: 0px;
        ///            margin: 0px;
        ///            color: #fff;
        ///            font-family: Arial;
        ///        }
        ///        .grid{
        ///            display: flex;
        ///            justify-content: center;
        ///            align-item [stringa troncata]&quot;;.
        /// </summary>
        internal static string home {
            get {
                return ResourceManager.GetString("home", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap https_secure {
            get {
                object obj = ResourceManager.GetObject("https_secure", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap InactiveCenter {
            get {
                object obj = ResourceManager.GetObject("InactiveCenter", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap InactiveLeft {
            get {
                object obj = ResourceManager.GetObject("InactiveLeft", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap InactiveRight {
            get {
                object obj = ResourceManager.GetObject("InactiveRight", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap InactiveRightNoDivider {
            get {
                object obj = ResourceManager.GetObject("InactiveRightNoDivider", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Icon simile a (Icona).
        /// </summary>
        internal static System.Drawing.Icon kitsune {
            get {
                object obj = ResourceManager.GetObject("kitsune", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Left {
            get {
                object obj = ResourceManager.GetObject("Left", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap LeftSide {
            get {
                object obj = ResourceManager.GetObject("LeftSide", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap LeftSide_Active {
            get {
                object obj = ResourceManager.GetObject("LeftSide_Active", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Byte[].
        /// </summary>
        internal static byte[] Maximize {
            get {
                object obj = ResourceManager.GetObject("Maximize", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a &lt;div id=&apos;BROWSER-MESSAGE-BOX&apos;style=&apos;background-color: rgba(59, 64, 84, 0.568);    
        ///border-radius: 12px;   backdrop-filter: blur(10px);   
        ///width: 500px; 
        ///height: 45px;  
        ///font-family: Arial, Helvetica, sans-serif;
        ///fill: white;
        ///transition: background-color 0.2s linear;
        ///margin-top: 10px;    color: #fff;  text-decoration: none; display: flex; align-items: center;
        ///    justify-content: center; position: fixed; bottom: 10px; left: calc(50% - 250px); z-index: 99;&apos;&gt;
        ///$messageBox-placeholder$
        ///&lt;script id=&quot;scri [stringa troncata]&quot;;.
        /// </summary>
        internal static string messageBox {
            get {
                return ResourceManager.GetString("messageBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a var opacity = 1;
        ///    var timeUntilDisappear = 500;
        ///  
        ///    var timer = setInterval(function() {
        ///   timeUntilDisappear--;
        ///   if(timeUntilDisappear &lt; 1){
        ///       opacity-= 0.005;
        ///var element = document.getElementById(&quot;BROWSER-MESSAGE-BOX&quot;);
        ///   element.style.opacity = &quot;&quot;+opacity;
        ///   if(opacity &lt; 0){
        ///       element.remove();
        ///       clearInterval(timer);
        ///   }
        ///   }
        ///
        ///}, 1);
        ///    .
        /// </summary>
        internal static string messagebox1 {
            get {
                return ResourceManager.GetString("messagebox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Byte[].
        /// </summary>
        internal static byte[] Minimize {
            get {
                object obj = ResourceManager.GetObject("Minimize", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap no_secure {
            get {
                object obj = ResourceManager.GetObject("no_secure", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Icon simile a (Icona).
        /// </summary>
        internal static System.Drawing.Icon NoSiteFavicon {
            get {
                object obj = ResourceManager.GetObject("NoSiteFavicon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap PlusButton {
            get {
                object obj = ResourceManager.GetObject("PlusButton", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap PlusButton_Hover {
            get {
                object obj = ResourceManager.GetObject("PlusButton_Hover", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap reload {
            get {
                object obj = ResourceManager.GetObject("reload", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Byte[].
        /// </summary>
        internal static byte[] Restore {
            get {
                object obj = ResourceManager.GetObject("Restore", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Right {
            get {
                object obj = ResourceManager.GetObject("Right", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap RightSide {
            get {
                object obj = ResourceManager.GetObject("RightSide", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap RightSide_Active {
            get {
                object obj = ResourceManager.GetObject("RightSide_Active", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap settings {
            get {
                object obj = ResourceManager.GetObject("settings", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a &lt;style&gt;
        ///    body{   
        ///        background-image: url(&apos;$backgroundImage$&apos;);  
        ///        background-repeat: no-repeat; 
        ///        background-attachment: fixed; 
        ///        background-size: cover; 
        ///        padding: 0px;  
        ///        margin: 0px;  
        ///        color: #fff; 
        ///        font-family: Arial; 
        ///        
        ///      }
        ///    .flex-grid{
        ///        display: flex;
        ///        justify-content: flex-start;
        ///        align-items: center;
        ///        background-color: #1503104b;
        ///        padding-left: 12%;
        ///        min-height: calc [stringa troncata]&quot;;.
        /// </summary>
        internal static string style {
            get {
                return ResourceManager.GetString("style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap TabCenter {
            get {
                object obj = ResourceManager.GetObject("TabCenter", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap TabCenter_Active {
            get {
                object obj = ResourceManager.GetObject("TabCenter_Active", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
